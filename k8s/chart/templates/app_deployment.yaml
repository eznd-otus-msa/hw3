apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otus-msa-hw3.fullname" . }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8000"
  labels:
    {{- include "otus-msa-hw3.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "otus-msa-hw3.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "otus-msa-hw3.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.image.command }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /probe/live
              port: http
          readinessProbe:
            httpGet:
              path: /probe/ready
              port: http
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secrets
      initContainers:
        - name: migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.image.migrateCommand }}
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secrets


